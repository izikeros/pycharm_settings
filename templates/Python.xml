<templateSet group="Python">
  <template name="todo" value="# TODO: KS: $DATE$: $TXT$" description="todo with initials and date" toReformat="true" toShortenFQNames="true">
    <variable name="DATE" expression="date(&quot;yyyy-MM-dd&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="TXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="fixme" value="# FIXME: KS: $DATE$: $TXT$" description="fixme with initials and date" toReformat="true" toShortenFQNames="true">
    <variable name="DATE" expression="date(&quot;yyyy-MM-dd&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="TXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="npd" value="import numpy as np&#10;import pandas as pd" description="import numpy and pandas" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="plt" value="from matplotlib import pyplot as plt" description="import matplotlib as plt" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="np" value="import numpy as np" description="import numpy" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="pd" value="import pandas as pd" description="import pandas" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="arg" value="parser = argparse.ArgumentParser(description=&quot;Purpose of the script&quot;)&#10;#positional arguments&#10;parser.add_argument('events', help=&quot;help1&quot;)&#10;&#10;# named parameters&#10;parser.add_argument('-e', &quot;--end&quot;, help=&quot;help2&quot;, type=int, default=100)&#10;&#10;# switch&#10;parser.add_argument(&quot;--quiet&quot;, action='store_true', default=False, help=&quot;quiet mode&quot;)&#10;args = parser.parse_args()&#10;start(args.events)" description="argparse snippet" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="lg" value="import logging&#10;logger = logging.getLogger(__name__)" description="logging" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="py" value="#!/usr/bin/env python3" description="python3 shebang" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="skip" value="@pytest.mark.skip(reason='not implemented')" description="add pytest mark - skip" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="pp" value="from pprint import pprint" description="import pprint" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dt" value="import datetime as dt" description="import datetime as dt" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="loguru" value="import sys&#10;from loguru import logger&#10;&#10;&#10;logger.remove()&#10;logger.add(&#10;    sys.stdout,&#10;    # format=&quot;&lt;green&gt;{time:HH:mm:ss}&lt;/green&gt; &lt;level&gt;{level}&lt;/level&gt; {message}&quot;,&#10;    format=&quot;&lt;level&gt;{level}&lt;/level&gt; {message}&quot;,&#10;    colorize=True,&#10;    level=&quot;INFO&quot;,&#10;)" description="add loguru console logging" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="timestamp" value="# timestamp get current time and store in format yymmdd_hhmm&#10;import datetime as dt&#10;timestamp = dt.datetime.now().strftime(&quot;%y%m%d_%H%M&quot;)" description="create timestamp variable" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>