<templateSet group="Python">
  <template name="todo" value="# TODO: KS: $DATE$: $TXT$" description="todo with initials and date" toReformat="true" toShortenFQNames="true">
    <variable name="DATE" expression="date(&quot;yyyy-MM-dd&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="TXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="fixme" value="# FIXME: KS: $DATE$: $TXT$" description="fixme with initials and date" toReformat="true" toShortenFQNames="true">
    <variable name="DATE" expression="date(&quot;yyyy-MM-dd&quot;)" defaultValue="" alwaysStopAt="false" />
    <variable name="TXT" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="npd" value="import numpy as np&#10;import pandas as pd" description="import numpy and pandas" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="plt" value="from matplotlib import pyplot as plt" description="import matplotlib as plt" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="np" value="import numpy as np" description="import numpy" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="pd" value="import pandas as pd" description="import pandas" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="arg" value="parser = argparse.ArgumentParser(description='Convert event csv file to sparse numpy array.')&#10;parser.add_argument('-i', '--input-file', help=&quot;Input file&quot;)&#10;args = parser.parse_args()&#10;start(args.input_file)" description="argparse snippet" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="lg" value="import logging&#10;logger = logging.getLogger(__name__)" description="logging" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>